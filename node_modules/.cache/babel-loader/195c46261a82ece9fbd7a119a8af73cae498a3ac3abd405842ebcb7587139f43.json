{"ast":null,"code":"export const calculate = (dobValue, todayDateValue, setBirthDateDay, setDateOfBirthError, setBirthDayGreeting, setTodaysDateError, setYear, setMonth, setDay, setNextBirthdayDays, setNextBirthdayMonths, setTotalYears, setTotalSeconds, setTotalMinutes, setTotalHours, setTotalWeek, setTotalMonths) => {\n  const isDobInvalid = dobValue.includes(\"Invalid\");\n  const isTodayDateInvalid = todayDateValue.toDate().toLocaleDateString().includes(\"Invalid\");\n  if (isDobInvalid || isTodayDateInvalid) {\n    if (isDobInvalid) {\n      setBirthDateDay(\"\");\n      setDateOfBirthError(\"Enter Valid Date : DD/MM/YYYY\");\n      setBirthDayGreeting(\"\");\n    } else {\n      setDateOfBirthError(\"\");\n    }\n    if (isTodayDateInvalid) {\n      setTodaysDateError(\"Enter Valid Date : DD/MM/YYYY\");\n      setCurrentDateDay(\"\");\n      setBirthDayGreeting(\"\");\n    } else {\n      setTodaysDateError(\"\");\n    }\n    setYear(\"0\");\n    setMonth(\"0\");\n    setDay(\"0\");\n    setBirthDateDay(\"\");\n    setNextBirthdayDays(\"0\");\n    setNextBirthdayMonths(\"0\");\n    setTotalYears(\"0\");\n    setTotalSeconds(\"0\");\n    setTotalMinutes(\"0\");\n    setTotalHours(\"0\");\n    setTotalWeek(\"0\");\n    setTotalMonths(\"0\");\n  }\n  setDateOfBirthError(\"\");\n  setTodaysDateError(\"\");\n  let birth = test2.split(\"-\");\n  let todayD1 = test.split(\"-\");\n  if (birth.length !== 3 || todayD1.length !== 3) {\n    if (birth.length !== 3) {\n      setDateOfBirthError(\"Enter valid date : DD/MM/YYYY\");\n      setBirthDateDay(\"\");\n    } else {\n      setDateOfBirthError(\"\");\n    }\n    if (todayD1.length !== 3) {\n      setTodaysDateError(\"Enter valid date : DD/MM/YYYY\");\n      setCurrentDateDay(\"\");\n    } else {\n      setTodaysDateError(\"\");\n    }\n    return;\n  }\n  let birthDate1 = {\n    birthYear: parseInt(birth[0]),\n    birthMonth: parseInt(birth[1]),\n    birthDay: parseInt(birth[2])\n  };\n  let todaysDate1 = {\n    birthYear: parseInt(todayD1[0]),\n    birthMonth: parseInt(todayD1[1]),\n    birthDay: parseInt(todayD1[2])\n  };\n  const currentDate = new Date(todaysDate1.birthYear, todaysDate1.birthMonth - 1, todaysDate1.birthDay);\n  const currentDate1 = new Date(todaysDate1.birthYear, todaysDate1.birthMonth - 1, todaysDate1.birthDay + 1);\n  const birthDate = new Date(birthDate1.birthYear, birthDate1.birthMonth - 1, birthDate1.birthDay); // Note: month is zero-based\n\n  const birthDate2 = new Date(birthDate1.birthYear, birthDate1.birthMonth - 1, birthDate1.birthDay + 1); // Note: month is zero-based\n\n  if (birthDate > currentDate) {\n    setYear(\"\");\n    setMonth(\"\");\n    setDay(\"\");\n    setBirthDateDay(\"\");\n    setNextBirthdayDays(\"\");\n    setNextBirthdayMonths(\"\");\n    setTotalYears(\"\");\n    setTotalDays(\"\");\n    setTotalSeconds(\"\");\n    setTotalMinutes(\"\");\n    setTotalHours(\"\");\n    setTotalWeek(\"\");\n    setTotalMonths(\"\");\n    setDateOfBirthError(\"Birth date should be less than today's date!\");\n    return;\n  }\n  setCurrentDateDay(currentDate1.toUTCString().substring(0, 3));\n  setBirthDateDay(birthDate2.toUTCString().substring(0, 3));\n  let ageYears = currentDate.getFullYear() - birthDate.getFullYear();\n  let ageMonths = currentDate.getMonth() - birthDate.getMonth();\n  let ageDays = currentDate.getDate() - birthDate.getDate();\n  if (ageMonths < 0 || ageMonths === 0 && ageDays < 0) {\n    ageYears--;\n    ageMonths += 12;\n  }\n  if (ageDays < 0) {\n    const prevMonthDate = new Date(currentDate.getFullYear(), currentDate.getMonth() - 2, 0);\n    ageDays += prevMonthDate.getDate();\n    ageMonths--;\n  }\n  if (birthDate.getMonth() >= currentDate.getMonth()) {\n    if (birthDate.getMonth() == currentDate.getMonth()) {\n      if (ageDays == 0) {\n        setNextBirthdayMonths(\"12\");\n        setNextBirthdayDays(\"0\");\n      } else {\n        setNextBirthdayDays(`${31 - ageDays}`);\n        if (birthDate.getDate() > currentDate.getDate()) {\n          setNextBirthdayMonths(\"0\");\n        } else {\n          setNextBirthdayMonths(\"11\");\n        }\n      }\n    } else if (birthDate.getMonth() > currentDate.getMonth()) {\n      let months = birthDate.getMonth() - currentDate.getMonth();\n      if (ageDays == 0) {\n        setNextBirthdayMonths(months);\n        setNextBirthdayDays(\"0\");\n      } else {\n        setNextBirthdayDays(`${30 - ageDays}`);\n        if (birthDate.getDate() > currentDate.getDate()) {\n          setNextBirthdayMonths(months);\n        } else {\n          setNextBirthdayMonths(months - 1);\n        }\n      }\n    }\n  } else {\n    if (ageDays == 0) {\n      let months = 12 - (currentDate.getMonth() - birthDate.getMonth());\n      setNextBirthdayMonths(months);\n      setNextBirthdayDays(\"0\");\n    } else if (ageDays < currentDate.getDate()) {\n      let months = 11 - (currentDate.getMonth() - birthDate.getMonth());\n      setNextBirthdayMonths(months);\n      setNextBirthdayDays(`${30 - ageDays}`);\n    } else {\n      let months = 12 - (currentDate.getMonth() - birthDate.getMonth());\n      setNextBirthdayMonths(months);\n      setNextBirthdayDays(`${31 - ageDays}`);\n    }\n  }\n  setYear(ageYears);\n  setMonth(ageMonths);\n  setDay(ageDays);\n  let seconds = Math.floor((currentDate.getTime() - birthDate.getTime()) / 1000);\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n  setTotalYears(ageYears);\n  setTotalSeconds(seconds);\n  setTotalMinutes(minutes);\n  setTotalHours(hours);\n  setTotalWeek(Math.floor(hours / 168));\n  setTotalDays(Math.floor(hours / 24));\n  setTotalMonths(Math.floor(hours / 730));\n  if (ageMonths === 0 && ageDays === 0) {\n    let suffix = \"\";\n    switch (ageYears) {\n      case 1:\n        suffix = \"st\";\n        break;\n      case 2:\n        suffix = \"nd\";\n        break;\n      case 3:\n        suffix = \"rd\";\n        break;\n      default:\n        suffix = \"th\";\n    }\n    setBirthDayGreeting(`Happy ${ageYears + suffix} Birthday !!!`);\n  } else {\n    setBirthDayGreeting(\"\");\n  }\n};","map":{"version":3,"names":["calculate","dobValue","todayDateValue","setBirthDateDay","setDateOfBirthError","setBirthDayGreeting","setTodaysDateError","setYear","setMonth","setDay","setNextBirthdayDays","setNextBirthdayMonths","setTotalYears","setTotalSeconds","setTotalMinutes","setTotalHours","setTotalWeek","setTotalMonths","isDobInvalid","includes","isTodayDateInvalid","toDate","toLocaleDateString","setCurrentDateDay","birth","test2","split","todayD1","test","length","birthDate1","birthYear","parseInt","birthMonth","birthDay","todaysDate1","currentDate","Date","currentDate1","birthDate","birthDate2","setTotalDays","toUTCString","substring","ageYears","getFullYear","ageMonths","getMonth","ageDays","getDate","prevMonthDate","months","seconds","Math","floor","getTime","minutes","hours","suffix"],"sources":["/home/gr00866046/Videos/Age-Calculator-app/src/Util/CalculateAge.js"],"sourcesContent":["export const calculate = (\n  dobValue,\n  todayDateValue,\n  setBirthDateDay,\n  setDateOfBirthError,\n  setBirthDayGreeting,\n  setTodaysDateError,\n  setYear,\n  setMonth,\n  setDay,\n  setNextBirthdayDays,\n  setNextBirthdayMonths,\n  setTotalYears,\n  setTotalSeconds,\n  setTotalMinutes,\n  setTotalHours,\n  setTotalWeek,\n  setTotalMonths\n) => {\n  const isDobInvalid = dobValue.includes(\"Invalid\");\n  const isTodayDateInvalid = todayDateValue\n    .toDate()\n    .toLocaleDateString()\n    .includes(\"Invalid\");\n\n  if (isDobInvalid || isTodayDateInvalid) {\n    if (isDobInvalid) {\n      setBirthDateDay(\"\");\n      setDateOfBirthError(\"Enter Valid Date : DD/MM/YYYY\");\n      setBirthDayGreeting(\"\");\n    } else {\n      setDateOfBirthError(\"\");\n    }\n\n    if (isTodayDateInvalid) {\n      setTodaysDateError(\"Enter Valid Date : DD/MM/YYYY\");\n      setCurrentDateDay(\"\");\n      setBirthDayGreeting(\"\");\n    } else {\n      setTodaysDateError(\"\");\n    }\n\n    setYear(\"0\");\n    setMonth(\"0\");\n    setDay(\"0\");\n    setBirthDateDay(\"\");\n    setNextBirthdayDays(\"0\");\n    setNextBirthdayMonths(\"0\");\n    setTotalYears(\"0\");\n    setTotalSeconds(\"0\");\n    setTotalMinutes(\"0\");\n    setTotalHours(\"0\");\n    setTotalWeek(\"0\");\n    setTotalMonths(\"0\");\n  }\n  setDateOfBirthError(\"\");\n  setTodaysDateError(\"\");\n\n  let birth = test2.split(\"-\");\n  let todayD1 = test.split(\"-\");\n\n  if (birth.length !== 3 || todayD1.length !== 3) {\n    if (birth.length !== 3) {\n      setDateOfBirthError(\"Enter valid date : DD/MM/YYYY\");\n      setBirthDateDay(\"\");\n    } else {\n      setDateOfBirthError(\"\");\n    }\n    if (todayD1.length !== 3) {\n      setTodaysDateError(\"Enter valid date : DD/MM/YYYY\");\n      setCurrentDateDay(\"\");\n    } else {\n      setTodaysDateError(\"\");\n    }\n\n    return;\n  }\n\n  let birthDate1 = {\n    birthYear: parseInt(birth[0]),\n    birthMonth: parseInt(birth[1]),\n    birthDay: parseInt(birth[2]),\n  };\n\n  let todaysDate1 = {\n    birthYear: parseInt(todayD1[0]),\n    birthMonth: parseInt(todayD1[1]),\n    birthDay: parseInt(todayD1[2]),\n  };\n\n  const currentDate = new Date(\n    todaysDate1.birthYear,\n    todaysDate1.birthMonth - 1,\n    todaysDate1.birthDay\n  );\n  const currentDate1 = new Date(\n    todaysDate1.birthYear,\n    todaysDate1.birthMonth - 1,\n    todaysDate1.birthDay + 1\n  );\n  const birthDate = new Date(\n    birthDate1.birthYear,\n    birthDate1.birthMonth - 1,\n    birthDate1.birthDay\n  ); // Note: month is zero-based\n\n  const birthDate2 = new Date(\n    birthDate1.birthYear,\n    birthDate1.birthMonth - 1,\n    birthDate1.birthDay + 1\n  ); // Note: month is zero-based\n\n  if (birthDate > currentDate) {\n    setYear(\"\");\n    setMonth(\"\");\n    setDay(\"\");\n    setBirthDateDay(\"\");\n    setNextBirthdayDays(\"\");\n    setNextBirthdayMonths(\"\");\n    setTotalYears(\"\");\n    setTotalDays(\"\");\n    setTotalSeconds(\"\");\n    setTotalMinutes(\"\");\n    setTotalHours(\"\");\n    setTotalWeek(\"\");\n    setTotalMonths(\"\");\n    setDateOfBirthError(\"Birth date should be less than today's date!\");\n    return;\n  }\n\n  setCurrentDateDay(currentDate1.toUTCString().substring(0, 3));\n  setBirthDateDay(birthDate2.toUTCString().substring(0, 3));\n\n  let ageYears = currentDate.getFullYear() - birthDate.getFullYear();\n  let ageMonths = currentDate.getMonth() - birthDate.getMonth();\n  let ageDays = currentDate.getDate() - birthDate.getDate();\n\n  if (ageMonths < 0 || (ageMonths === 0 && ageDays < 0)) {\n    ageYears--;\n    ageMonths += 12;\n  }\n\n  if (ageDays < 0) {\n    const prevMonthDate = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() - 2,\n      0\n    );\n    ageDays += prevMonthDate.getDate();\n    ageMonths--;\n  }\n\n  if (birthDate.getMonth() >= currentDate.getMonth()) {\n    if (birthDate.getMonth() == currentDate.getMonth()) {\n      if (ageDays == 0) {\n        setNextBirthdayMonths(\"12\");\n        setNextBirthdayDays(\"0\");\n      } else {\n        setNextBirthdayDays(`${31 - ageDays}`);\n        if (birthDate.getDate() > currentDate.getDate()) {\n          setNextBirthdayMonths(\"0\");\n        } else {\n          setNextBirthdayMonths(\"11\");\n        }\n      }\n    } else if (birthDate.getMonth() > currentDate.getMonth()) {\n      let months = birthDate.getMonth() - currentDate.getMonth();\n      if (ageDays == 0) {\n        setNextBirthdayMonths(months);\n        setNextBirthdayDays(\"0\");\n      } else {\n        setNextBirthdayDays(`${30 - ageDays}`);\n        if (birthDate.getDate() > currentDate.getDate()) {\n          setNextBirthdayMonths(months);\n        } else {\n          setNextBirthdayMonths(months - 1);\n        }\n      }\n    }\n  } else {\n    if (ageDays == 0) {\n      let months = 12 - (currentDate.getMonth() - birthDate.getMonth());\n      setNextBirthdayMonths(months);\n      setNextBirthdayDays(\"0\");\n    } else if (ageDays < currentDate.getDate()) {\n      let months = 11 - (currentDate.getMonth() - birthDate.getMonth());\n      setNextBirthdayMonths(months);\n      setNextBirthdayDays(`${30 - ageDays}`);\n    } else {\n      let months = 12 - (currentDate.getMonth() - birthDate.getMonth());\n      setNextBirthdayMonths(months);\n      setNextBirthdayDays(`${31 - ageDays}`);\n    }\n  }\n\n  setYear(ageYears);\n  setMonth(ageMonths);\n  setDay(ageDays);\n\n  let seconds = Math.floor(\n    (currentDate.getTime() - birthDate.getTime()) / 1000\n  );\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n\n  setTotalYears(ageYears);\n  setTotalSeconds(seconds);\n  setTotalMinutes(minutes);\n  setTotalHours(hours);\n  setTotalWeek(Math.floor(hours / 168));\n  setTotalDays(Math.floor(hours / 24));\n  setTotalMonths(Math.floor(hours / 730));\n\n  if (ageMonths === 0 && ageDays === 0) {\n    let suffix = \"\";\n    switch (ageYears) {\n      case 1:\n        suffix = \"st\";\n        break;\n      case 2:\n        suffix = \"nd\";\n        break;\n      case 3:\n        suffix = \"rd\";\n        break;\n      default:\n        suffix = \"th\";\n    }\n    setBirthDayGreeting(`Happy ${ageYears + suffix} Birthday !!!`);\n  } else {\n    setBirthDayGreeting(\"\");\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAGA,CACvBC,QAAQ,EACRC,cAAc,EACdC,eAAe,EACfC,mBAAmB,EACnBC,mBAAmB,EACnBC,kBAAkB,EAClBC,OAAO,EACPC,QAAQ,EACRC,MAAM,EACNC,mBAAmB,EACnBC,qBAAqB,EACrBC,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,aAAa,EACbC,YAAY,EACZC,cAAc,KACX;EACH,MAAMC,YAAY,GAAGjB,QAAQ,CAACkB,QAAQ,CAAC,SAAS,CAAC;EACjD,MAAMC,kBAAkB,GAAGlB,cAAc,CACtCmB,MAAM,CAAC,CAAC,CACRC,kBAAkB,CAAC,CAAC,CACpBH,QAAQ,CAAC,SAAS,CAAC;EAEtB,IAAID,YAAY,IAAIE,kBAAkB,EAAE;IACtC,IAAIF,YAAY,EAAE;MAChBf,eAAe,CAAC,EAAE,CAAC;MACnBC,mBAAmB,CAAC,+BAA+B,CAAC;MACpDC,mBAAmB,CAAC,EAAE,CAAC;IACzB,CAAC,MAAM;MACLD,mBAAmB,CAAC,EAAE,CAAC;IACzB;IAEA,IAAIgB,kBAAkB,EAAE;MACtBd,kBAAkB,CAAC,+BAA+B,CAAC;MACnDiB,iBAAiB,CAAC,EAAE,CAAC;MACrBlB,mBAAmB,CAAC,EAAE,CAAC;IACzB,CAAC,MAAM;MACLC,kBAAkB,CAAC,EAAE,CAAC;IACxB;IAEAC,OAAO,CAAC,GAAG,CAAC;IACZC,QAAQ,CAAC,GAAG,CAAC;IACbC,MAAM,CAAC,GAAG,CAAC;IACXN,eAAe,CAAC,EAAE,CAAC;IACnBO,mBAAmB,CAAC,GAAG,CAAC;IACxBC,qBAAqB,CAAC,GAAG,CAAC;IAC1BC,aAAa,CAAC,GAAG,CAAC;IAClBC,eAAe,CAAC,GAAG,CAAC;IACpBC,eAAe,CAAC,GAAG,CAAC;IACpBC,aAAa,CAAC,GAAG,CAAC;IAClBC,YAAY,CAAC,GAAG,CAAC;IACjBC,cAAc,CAAC,GAAG,CAAC;EACrB;EACAb,mBAAmB,CAAC,EAAE,CAAC;EACvBE,kBAAkB,CAAC,EAAE,CAAC;EAEtB,IAAIkB,KAAK,GAAGC,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;EAC5B,IAAIC,OAAO,GAAGC,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC;EAE7B,IAAIF,KAAK,CAACK,MAAM,KAAK,CAAC,IAAIF,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;IAC9C,IAAIL,KAAK,CAACK,MAAM,KAAK,CAAC,EAAE;MACtBzB,mBAAmB,CAAC,+BAA+B,CAAC;MACpDD,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,MAAM;MACLC,mBAAmB,CAAC,EAAE,CAAC;IACzB;IACA,IAAIuB,OAAO,CAACE,MAAM,KAAK,CAAC,EAAE;MACxBvB,kBAAkB,CAAC,+BAA+B,CAAC;MACnDiB,iBAAiB,CAAC,EAAE,CAAC;IACvB,CAAC,MAAM;MACLjB,kBAAkB,CAAC,EAAE,CAAC;IACxB;IAEA;EACF;EAEA,IAAIwB,UAAU,GAAG;IACfC,SAAS,EAAEC,QAAQ,CAACR,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7BS,UAAU,EAAED,QAAQ,CAACR,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9BU,QAAQ,EAAEF,QAAQ,CAACR,KAAK,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,IAAIW,WAAW,GAAG;IAChBJ,SAAS,EAAEC,QAAQ,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/BM,UAAU,EAAED,QAAQ,CAACL,OAAO,CAAC,CAAC,CAAC,CAAC;IAChCO,QAAQ,EAAEF,QAAQ,CAACL,OAAO,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMS,WAAW,GAAG,IAAIC,IAAI,CAC1BF,WAAW,CAACJ,SAAS,EACrBI,WAAW,CAACF,UAAU,GAAG,CAAC,EAC1BE,WAAW,CAACD,QACd,CAAC;EACD,MAAMI,YAAY,GAAG,IAAID,IAAI,CAC3BF,WAAW,CAACJ,SAAS,EACrBI,WAAW,CAACF,UAAU,GAAG,CAAC,EAC1BE,WAAW,CAACD,QAAQ,GAAG,CACzB,CAAC;EACD,MAAMK,SAAS,GAAG,IAAIF,IAAI,CACxBP,UAAU,CAACC,SAAS,EACpBD,UAAU,CAACG,UAAU,GAAG,CAAC,EACzBH,UAAU,CAACI,QACb,CAAC,CAAC,CAAC;;EAEH,MAAMM,UAAU,GAAG,IAAIH,IAAI,CACzBP,UAAU,CAACC,SAAS,EACpBD,UAAU,CAACG,UAAU,GAAG,CAAC,EACzBH,UAAU,CAACI,QAAQ,GAAG,CACxB,CAAC,CAAC,CAAC;;EAEH,IAAIK,SAAS,GAAGH,WAAW,EAAE;IAC3B7B,OAAO,CAAC,EAAE,CAAC;IACXC,QAAQ,CAAC,EAAE,CAAC;IACZC,MAAM,CAAC,EAAE,CAAC;IACVN,eAAe,CAAC,EAAE,CAAC;IACnBO,mBAAmB,CAAC,EAAE,CAAC;IACvBC,qBAAqB,CAAC,EAAE,CAAC;IACzBC,aAAa,CAAC,EAAE,CAAC;IACjB6B,YAAY,CAAC,EAAE,CAAC;IAChB5B,eAAe,CAAC,EAAE,CAAC;IACnBC,eAAe,CAAC,EAAE,CAAC;IACnBC,aAAa,CAAC,EAAE,CAAC;IACjBC,YAAY,CAAC,EAAE,CAAC;IAChBC,cAAc,CAAC,EAAE,CAAC;IAClBb,mBAAmB,CAAC,8CAA8C,CAAC;IACnE;EACF;EAEAmB,iBAAiB,CAACe,YAAY,CAACI,WAAW,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC7DxC,eAAe,CAACqC,UAAU,CAACE,WAAW,CAAC,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAEzD,IAAIC,QAAQ,GAAGR,WAAW,CAACS,WAAW,CAAC,CAAC,GAAGN,SAAS,CAACM,WAAW,CAAC,CAAC;EAClE,IAAIC,SAAS,GAAGV,WAAW,CAACW,QAAQ,CAAC,CAAC,GAAGR,SAAS,CAACQ,QAAQ,CAAC,CAAC;EAC7D,IAAIC,OAAO,GAAGZ,WAAW,CAACa,OAAO,CAAC,CAAC,GAAGV,SAAS,CAACU,OAAO,CAAC,CAAC;EAEzD,IAAIH,SAAS,GAAG,CAAC,IAAKA,SAAS,KAAK,CAAC,IAAIE,OAAO,GAAG,CAAE,EAAE;IACrDJ,QAAQ,EAAE;IACVE,SAAS,IAAI,EAAE;EACjB;EAEA,IAAIE,OAAO,GAAG,CAAC,EAAE;IACf,MAAME,aAAa,GAAG,IAAIb,IAAI,CAC5BD,WAAW,CAACS,WAAW,CAAC,CAAC,EACzBT,WAAW,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,EAC1B,CACF,CAAC;IACDC,OAAO,IAAIE,aAAa,CAACD,OAAO,CAAC,CAAC;IAClCH,SAAS,EAAE;EACb;EAEA,IAAIP,SAAS,CAACQ,QAAQ,CAAC,CAAC,IAAIX,WAAW,CAACW,QAAQ,CAAC,CAAC,EAAE;IAClD,IAAIR,SAAS,CAACQ,QAAQ,CAAC,CAAC,IAAIX,WAAW,CAACW,QAAQ,CAAC,CAAC,EAAE;MAClD,IAAIC,OAAO,IAAI,CAAC,EAAE;QAChBrC,qBAAqB,CAAC,IAAI,CAAC;QAC3BD,mBAAmB,CAAC,GAAG,CAAC;MAC1B,CAAC,MAAM;QACLA,mBAAmB,CAAC,GAAG,EAAE,GAAGsC,OAAO,EAAE,CAAC;QACtC,IAAIT,SAAS,CAACU,OAAO,CAAC,CAAC,GAAGb,WAAW,CAACa,OAAO,CAAC,CAAC,EAAE;UAC/CtC,qBAAqB,CAAC,GAAG,CAAC;QAC5B,CAAC,MAAM;UACLA,qBAAqB,CAAC,IAAI,CAAC;QAC7B;MACF;IACF,CAAC,MAAM,IAAI4B,SAAS,CAACQ,QAAQ,CAAC,CAAC,GAAGX,WAAW,CAACW,QAAQ,CAAC,CAAC,EAAE;MACxD,IAAII,MAAM,GAAGZ,SAAS,CAACQ,QAAQ,CAAC,CAAC,GAAGX,WAAW,CAACW,QAAQ,CAAC,CAAC;MAC1D,IAAIC,OAAO,IAAI,CAAC,EAAE;QAChBrC,qBAAqB,CAACwC,MAAM,CAAC;QAC7BzC,mBAAmB,CAAC,GAAG,CAAC;MAC1B,CAAC,MAAM;QACLA,mBAAmB,CAAC,GAAG,EAAE,GAAGsC,OAAO,EAAE,CAAC;QACtC,IAAIT,SAAS,CAACU,OAAO,CAAC,CAAC,GAAGb,WAAW,CAACa,OAAO,CAAC,CAAC,EAAE;UAC/CtC,qBAAqB,CAACwC,MAAM,CAAC;QAC/B,CAAC,MAAM;UACLxC,qBAAqB,CAACwC,MAAM,GAAG,CAAC,CAAC;QACnC;MACF;IACF;EACF,CAAC,MAAM;IACL,IAAIH,OAAO,IAAI,CAAC,EAAE;MAChB,IAAIG,MAAM,GAAG,EAAE,IAAIf,WAAW,CAACW,QAAQ,CAAC,CAAC,GAAGR,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAAC;MACjEpC,qBAAqB,CAACwC,MAAM,CAAC;MAC7BzC,mBAAmB,CAAC,GAAG,CAAC;IAC1B,CAAC,MAAM,IAAIsC,OAAO,GAAGZ,WAAW,CAACa,OAAO,CAAC,CAAC,EAAE;MAC1C,IAAIE,MAAM,GAAG,EAAE,IAAIf,WAAW,CAACW,QAAQ,CAAC,CAAC,GAAGR,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAAC;MACjEpC,qBAAqB,CAACwC,MAAM,CAAC;MAC7BzC,mBAAmB,CAAC,GAAG,EAAE,GAAGsC,OAAO,EAAE,CAAC;IACxC,CAAC,MAAM;MACL,IAAIG,MAAM,GAAG,EAAE,IAAIf,WAAW,CAACW,QAAQ,CAAC,CAAC,GAAGR,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAAC;MACjEpC,qBAAqB,CAACwC,MAAM,CAAC;MAC7BzC,mBAAmB,CAAC,GAAG,EAAE,GAAGsC,OAAO,EAAE,CAAC;IACxC;EACF;EAEAzC,OAAO,CAACqC,QAAQ,CAAC;EACjBpC,QAAQ,CAACsC,SAAS,CAAC;EACnBrC,MAAM,CAACuC,OAAO,CAAC;EAEf,IAAII,OAAO,GAAGC,IAAI,CAACC,KAAK,CACtB,CAAClB,WAAW,CAACmB,OAAO,CAAC,CAAC,GAAGhB,SAAS,CAACgB,OAAO,CAAC,CAAC,IAAI,IAClD,CAAC;EACD,IAAIC,OAAO,GAAGH,IAAI,CAACC,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;EACtC,IAAIK,KAAK,GAAGJ,IAAI,CAACC,KAAK,CAACE,OAAO,GAAG,EAAE,CAAC;EAEpC5C,aAAa,CAACgC,QAAQ,CAAC;EACvB/B,eAAe,CAACuC,OAAO,CAAC;EACxBtC,eAAe,CAAC0C,OAAO,CAAC;EACxBzC,aAAa,CAAC0C,KAAK,CAAC;EACpBzC,YAAY,CAACqC,IAAI,CAACC,KAAK,CAACG,KAAK,GAAG,GAAG,CAAC,CAAC;EACrChB,YAAY,CAACY,IAAI,CAACC,KAAK,CAACG,KAAK,GAAG,EAAE,CAAC,CAAC;EACpCxC,cAAc,CAACoC,IAAI,CAACC,KAAK,CAACG,KAAK,GAAG,GAAG,CAAC,CAAC;EAEvC,IAAIX,SAAS,KAAK,CAAC,IAAIE,OAAO,KAAK,CAAC,EAAE;IACpC,IAAIU,MAAM,GAAG,EAAE;IACf,QAAQd,QAAQ;MACd,KAAK,CAAC;QACJc,MAAM,GAAG,IAAI;QACb;MACF,KAAK,CAAC;QACJA,MAAM,GAAG,IAAI;QACb;MACF,KAAK,CAAC;QACJA,MAAM,GAAG,IAAI;QACb;MACF;QACEA,MAAM,GAAG,IAAI;IACjB;IACArD,mBAAmB,CAAC,SAASuC,QAAQ,GAAGc,MAAM,eAAe,CAAC;EAChE,CAAC,MAAM;IACLrD,mBAAmB,CAAC,EAAE,CAAC;EACzB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}