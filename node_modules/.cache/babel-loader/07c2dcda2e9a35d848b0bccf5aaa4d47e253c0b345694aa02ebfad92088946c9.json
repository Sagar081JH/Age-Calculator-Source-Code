{"ast":null,"code":"export const calculate=(e,dateOfBirth,todaysDate,setBirthDateDay,setDateOfBirthError,setBirthDayGreeting,setTodaysDateError,setYear,setMonth,setDay,setNextBirthdayDays,setNextBirthdayMonths,setTotalYears,setTotalSeconds,setTotalMinutes,setTotalHours,setTotalWeek,setTotalMonths,setCurrentDateDay,setTotalDays,setIsCalculated)=>{e.preventDefault();const isDobInvalid=dateOfBirth.includes(\"Invalid\");const isTodayDateInvalid=todaysDate.includes(\"Invalid\");if(isDobInvalid||isTodayDateInvalid){if(isDobInvalid){setBirthDateDay(\"\");setDateOfBirthError(\"Enter Valid Date : DD/MM/YYYY\");setBirthDayGreeting(\"\");}else{setDateOfBirthError(\"\");}if(isTodayDateInvalid){setTodaysDateError(\"Enter Valid Date : DD/MM/YYYY\");setCurrentDateDay(\"\");setBirthDayGreeting(\"\");}else{setTodaysDateError(\"\");}setYear(\"0\");setMonth(\"0\");setDay(\"0\");setBirthDateDay(\"\");setNextBirthdayDays(\"0\");setNextBirthdayMonths(\"0\");setTotalYears(\"0\");setTotalSeconds(\"0\");setTotalMinutes(\"0\");setTotalHours(\"0\");setTotalWeek(\"0\");setTotalMonths(\"0\");setTotalDays(\"0\");}setDateOfBirthError(\"\");setTodaysDateError(\"\");let birth=dateOfBirth.split(\"-\");let todayD1=todaysDate.split(\"-\");if(birth.length!==3||todayD1.length!==3){if(birth.length!==3){setDateOfBirthError(\"Enter valid date : DD/MM/YYYY\");setBirthDateDay(\"\");}else{setDateOfBirthError(\"\");}if(todayD1.length!==3){setTodaysDateError(\"Enter valid date : DD/MM/YYYY\");setCurrentDateDay(\"\");}else{setTodaysDateError(\"\");}setYear(\"0\");setMonth(\"0\");setDay(\"0\");setBirthDateDay(\"\");setNextBirthdayDays(\"0\");setNextBirthdayMonths(\"0\");setTotalYears(\"0\");setTotalSeconds(\"0\");setTotalMinutes(\"0\");setTotalHours(\"0\");setTotalWeek(\"0\");setTotalMonths(\"0\");setTotalDays(\"0\");setIsCalculated(false);return;}let birthDate1={birthYear:parseInt(birth[0]),birthMonth:parseInt(birth[1]),birthDay:parseInt(birth[2])};let todaysDate1={birthYear:parseInt(todayD1[0]),birthMonth:parseInt(todayD1[1]),birthDay:parseInt(todayD1[2])};const currentDate=new Date(todaysDate1.birthYear,todaysDate1.birthMonth-1,todaysDate1.birthDay);const currentDate1=new Date(todaysDate1.birthYear,todaysDate1.birthMonth-1,todaysDate1.birthDay+1);const birthDate=new Date(birthDate1.birthYear,birthDate1.birthMonth-1,birthDate1.birthDay);// Note: month is zero-based\nconst birthDate2=new Date(birthDate1.birthYear,birthDate1.birthMonth-1,birthDate1.birthDay+1);// Note: month is zero-based\nif(birthDate>currentDate){setYear(\"\");setMonth(\"\");setDay(\"\");setBirthDateDay(\"\");setNextBirthdayDays(\"\");setNextBirthdayMonths(\"\");setTotalYears(\"\");setTotalDays(\"\");setTotalSeconds(\"\");setTotalMinutes(\"\");setTotalHours(\"\");setTotalWeek(\"\");setTotalMonths(\"\");setIsCalculated(false);setDateOfBirthError(\"Birth date should be less than today's date!\");return;}setCurrentDateDay(currentDate1.toUTCString().substring(0,3));setBirthDateDay(birthDate2.toUTCString().substring(0,3));let ageYears=currentDate.getFullYear()-birthDate.getFullYear();let ageMonths=currentDate.getMonth()-birthDate.getMonth();let ageDays=currentDate.getDate()-birthDate.getDate();if(ageMonths<0||ageMonths===0&&ageDays<0){ageYears--;ageMonths+=12;}if(ageDays<0){const prevMonthDate=new Date(currentDate.getFullYear(),currentDate.getMonth()-2,0);ageDays+=prevMonthDate.getDate();ageMonths--;}if(birthDate.getMonth()>=currentDate.getMonth()){if(birthDate.getMonth()==currentDate.getMonth()){if(ageDays==0){setNextBirthdayMonths(\"12\");setNextBirthdayDays(\"0\");}else{setNextBirthdayDays(\"\".concat(31-ageDays));if(birthDate.getDate()>currentDate.getDate()){setNextBirthdayMonths(\"0\");}else{setNextBirthdayMonths(\"11\");}}}else if(birthDate.getMonth()>currentDate.getMonth()){let months=birthDate.getMonth()-currentDate.getMonth();if(ageDays==0){setNextBirthdayMonths(months);setNextBirthdayDays(\"0\");}else{setNextBirthdayDays(\"\".concat(30-ageDays));if(birthDate.getDate()>currentDate.getDate()){setNextBirthdayMonths(months);}else{setNextBirthdayMonths(months-1);}}}}else{if(ageDays==0){let months=12-(currentDate.getMonth()-birthDate.getMonth());setNextBirthdayMonths(months);setNextBirthdayDays(\"0\");}else if(ageDays<currentDate.getDate()){let months=11-(currentDate.getMonth()-birthDate.getMonth());setNextBirthdayMonths(months);setNextBirthdayDays(\"\".concat(30-ageDays));}else{let months=12-(currentDate.getMonth()-birthDate.getMonth());setNextBirthdayMonths(months);setNextBirthdayDays(\"\".concat(31-ageDays));}}setYear(ageYears);setMonth(ageMonths);setDay(ageDays);let seconds=Math.floor((currentDate.getTime()-birthDate.getTime())/1000);let minutes=Math.floor(seconds/60);let hours=Math.floor(minutes/60);setTotalYears(ageYears);setTotalSeconds(seconds);setTotalMinutes(minutes);setTotalHours(hours);setTotalWeek(Math.floor(hours/168));setTotalDays(Math.floor(hours/24));setTotalMonths(Math.floor(hours/730));setIsCalculated(true);if(ageMonths===0&&ageDays===0){let suffix=\"\";switch(ageYears){case 1:suffix=\"st\";break;case 2:suffix=\"nd\";break;case 3:suffix=\"rd\";break;default:suffix=\"th\";}setBirthDayGreeting(\"Happy \".concat(ageYears+suffix,\" Birthday !!!\"));}else{setBirthDayGreeting(\"\");}};","map":{"version":3,"names":["calculate","e","dateOfBirth","todaysDate","setBirthDateDay","setDateOfBirthError","setBirthDayGreeting","setTodaysDateError","setYear","setMonth","setDay","setNextBirthdayDays","setNextBirthdayMonths","setTotalYears","setTotalSeconds","setTotalMinutes","setTotalHours","setTotalWeek","setTotalMonths","setCurrentDateDay","setTotalDays","setIsCalculated","preventDefault","isDobInvalid","includes","isTodayDateInvalid","birth","split","todayD1","length","birthDate1","birthYear","parseInt","birthMonth","birthDay","todaysDate1","currentDate","Date","currentDate1","birthDate","birthDate2","toUTCString","substring","ageYears","getFullYear","ageMonths","getMonth","ageDays","getDate","prevMonthDate","concat","months","seconds","Math","floor","getTime","minutes","hours","suffix"],"sources":["/home/gr00866046/Videos/Age-Calculator-app/src/Util/CalculateAge.js"],"sourcesContent":["export const calculate = (\n  e,\n  dateOfBirth,\n  todaysDate,\n  setBirthDateDay,\n  setDateOfBirthError,\n  setBirthDayGreeting,\n  setTodaysDateError,\n  setYear,\n  setMonth,\n  setDay,\n  setNextBirthdayDays,\n  setNextBirthdayMonths,\n  setTotalYears,\n  setTotalSeconds,\n  setTotalMinutes,\n  setTotalHours,\n  setTotalWeek,\n  setTotalMonths,\n  setCurrentDateDay,\n  setTotalDays,\n  setIsCalculated\n) => {\n  e.preventDefault();\n\n  const isDobInvalid = dateOfBirth.includes(\"Invalid\");\n  const isTodayDateInvalid = todaysDate.includes(\"Invalid\");\n\n  if (isDobInvalid || isTodayDateInvalid) {\n    if (isDobInvalid) {\n      setBirthDateDay(\"\");\n      setDateOfBirthError(\"Enter Valid Date : DD/MM/YYYY\");\n      setBirthDayGreeting(\"\");\n    } else {\n      setDateOfBirthError(\"\");\n    }\n\n    if (isTodayDateInvalid) {\n      setTodaysDateError(\"Enter Valid Date : DD/MM/YYYY\");\n      setCurrentDateDay(\"\");\n      setBirthDayGreeting(\"\");\n    } else {\n      setTodaysDateError(\"\");\n    }\n\n    setYear(\"0\");\n    setMonth(\"0\");\n    setDay(\"0\");\n    setBirthDateDay(\"\");\n    setNextBirthdayDays(\"0\");\n    setNextBirthdayMonths(\"0\");\n    setTotalYears(\"0\");\n    setTotalSeconds(\"0\");\n    setTotalMinutes(\"0\");\n    setTotalHours(\"0\");\n    setTotalWeek(\"0\");\n    setTotalMonths(\"0\");\n    setTotalDays(\"0\");\n  }\n  setDateOfBirthError(\"\");\n  setTodaysDateError(\"\");\n\n  let birth = dateOfBirth.split(\"-\");\n  let todayD1 = todaysDate.split(\"-\");\n\n  if (birth.length !== 3 || todayD1.length !== 3) {\n    if (birth.length !== 3) {\n      setDateOfBirthError(\"Enter valid date : DD/MM/YYYY\");\n      setBirthDateDay(\"\");\n    } else {\n      setDateOfBirthError(\"\");\n    }\n    if (todayD1.length !== 3) {\n      setTodaysDateError(\"Enter valid date : DD/MM/YYYY\");\n      setCurrentDateDay(\"\");\n    } else {\n      setTodaysDateError(\"\");\n    }\n    setYear(\"0\");\n    setMonth(\"0\");\n    setDay(\"0\");\n    setBirthDateDay(\"\");\n    setNextBirthdayDays(\"0\");\n    setNextBirthdayMonths(\"0\");\n    setTotalYears(\"0\");\n    setTotalSeconds(\"0\");\n    setTotalMinutes(\"0\");\n    setTotalHours(\"0\");\n    setTotalWeek(\"0\");\n    setTotalMonths(\"0\");\n    setTotalDays(\"0\");\n    setIsCalculated(false);\n    return;\n  }\n\n  let birthDate1 = {\n    birthYear: parseInt(birth[0]),\n    birthMonth: parseInt(birth[1]),\n    birthDay: parseInt(birth[2]),\n  };\n\n  let todaysDate1 = {\n    birthYear: parseInt(todayD1[0]),\n    birthMonth: parseInt(todayD1[1]),\n    birthDay: parseInt(todayD1[2]),\n  };\n\n  const currentDate = new Date(\n    todaysDate1.birthYear,\n    todaysDate1.birthMonth - 1,\n    todaysDate1.birthDay\n  );\n  const currentDate1 = new Date(\n    todaysDate1.birthYear,\n    todaysDate1.birthMonth - 1,\n    todaysDate1.birthDay + 1\n  );\n  const birthDate = new Date(\n    birthDate1.birthYear,\n    birthDate1.birthMonth - 1,\n    birthDate1.birthDay\n  ); // Note: month is zero-based\n\n  const birthDate2 = new Date(\n    birthDate1.birthYear,\n    birthDate1.birthMonth - 1,\n    birthDate1.birthDay + 1\n  ); // Note: month is zero-based\n\n  if (birthDate > currentDate) {\n    setYear(\"\");\n    setMonth(\"\");\n    setDay(\"\");\n    setBirthDateDay(\"\");\n    setNextBirthdayDays(\"\");\n    setNextBirthdayMonths(\"\");\n    setTotalYears(\"\");\n    setTotalDays(\"\");\n    setTotalSeconds(\"\");\n    setTotalMinutes(\"\");\n    setTotalHours(\"\");\n    setTotalWeek(\"\");\n    setTotalMonths(\"\");\n    setIsCalculated(false);\n    setDateOfBirthError(\"Birth date should be less than today's date!\");\n    return;\n  }\n\n  setCurrentDateDay(currentDate1.toUTCString().substring(0, 3));\n  setBirthDateDay(birthDate2.toUTCString().substring(0, 3));\n\n  let ageYears = currentDate.getFullYear() - birthDate.getFullYear();\n  let ageMonths = currentDate.getMonth() - birthDate.getMonth();\n  let ageDays = currentDate.getDate() - birthDate.getDate();\n\n  if (ageMonths < 0 || (ageMonths === 0 && ageDays < 0)) {\n    ageYears--;\n    ageMonths += 12;\n  }\n\n  if (ageDays < 0) {\n    const prevMonthDate = new Date(\n      currentDate.getFullYear(),\n      currentDate.getMonth() - 2,\n      0\n    );\n    ageDays += prevMonthDate.getDate();\n    ageMonths--;\n  }\n\n  if (birthDate.getMonth() >= currentDate.getMonth()) {\n    if (birthDate.getMonth() == currentDate.getMonth()) {\n      if (ageDays == 0) {\n        setNextBirthdayMonths(\"12\");\n        setNextBirthdayDays(\"0\");\n      } else {\n        setNextBirthdayDays(`${31 - ageDays}`);\n        if (birthDate.getDate() > currentDate.getDate()) {\n          setNextBirthdayMonths(\"0\");\n        } else {\n          setNextBirthdayMonths(\"11\");\n        }\n      }\n    } else if (birthDate.getMonth() > currentDate.getMonth()) {\n      let months = birthDate.getMonth() - currentDate.getMonth();\n      if (ageDays == 0) {\n        setNextBirthdayMonths(months);\n        setNextBirthdayDays(\"0\");\n      } else {\n        setNextBirthdayDays(`${30 - ageDays}`);\n        if (birthDate.getDate() > currentDate.getDate()) {\n          setNextBirthdayMonths(months);\n        } else {\n          setNextBirthdayMonths(months - 1);\n        }\n      }\n    }\n  } else {\n    if (ageDays == 0) {\n      let months = 12 - (currentDate.getMonth() - birthDate.getMonth());\n      setNextBirthdayMonths(months);\n      setNextBirthdayDays(\"0\");\n    } else if (ageDays < currentDate.getDate()) {\n      let months = 11 - (currentDate.getMonth() - birthDate.getMonth());\n      setNextBirthdayMonths(months);\n      setNextBirthdayDays(`${30 - ageDays}`);\n    } else {\n      let months = 12 - (currentDate.getMonth() - birthDate.getMonth());\n      setNextBirthdayMonths(months);\n      setNextBirthdayDays(`${31 - ageDays}`);\n    }\n  }\n\n  setYear(ageYears);\n  setMonth(ageMonths);\n  setDay(ageDays);\n\n  let seconds = Math.floor(\n    (currentDate.getTime() - birthDate.getTime()) / 1000\n  );\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n\n  setTotalYears(ageYears);\n  setTotalSeconds(seconds);\n  setTotalMinutes(minutes);\n  setTotalHours(hours);\n  setTotalWeek(Math.floor(hours / 168));\n  setTotalDays(Math.floor(hours / 24));\n  setTotalMonths(Math.floor(hours / 730));\n\n  setIsCalculated(true);\n\n  if (ageMonths === 0 && ageDays === 0) {\n    let suffix = \"\";\n    switch (ageYears) {\n      case 1:\n        suffix = \"st\";\n        break;\n      case 2:\n        suffix = \"nd\";\n        break;\n      case 3:\n        suffix = \"rd\";\n        break;\n      default:\n        suffix = \"th\";\n    }\n    setBirthDayGreeting(`Happy ${ageYears + suffix} Birthday !!!`);\n  } else {\n    setBirthDayGreeting(\"\");\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}